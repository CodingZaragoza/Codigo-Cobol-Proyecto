// Generated by delombok at Tue Jan 14 16:25:34 UTC 2025
package gov.cms.fiss.pricers.fqhc.core.tables;

import gov.cms.fiss.pricers.common.csv.CsvContentReader;
import gov.cms.fiss.pricers.common.csv.CsvIngestionConfiguration;
import gov.cms.fiss.pricers.common.csv.LookupGenerator;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.List;
import java.util.NavigableMap;
import java.util.TreeMap;

/**
 * Creates the lookup table needed for IOP Rate per year.
 */
public class IopPaymentRateGte4TableEntryLookupGenerator {
  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  private static final org.slf4j.Logger LOGGER = org.slf4j.LoggerFactory.getLogger(IopPaymentRateGte4TableEntryLookupGenerator.class);
  private final CsvContentReader<IopPaymentRateLte3TableEntry> contentProvider = new CsvContentReader<>(IopPaymentRateLte3TableEntry.class).customizeSchema(CsvContentReader.HEADER_ROW_CUSTOMIZER);

  public IopPaymentRateGte4TableEntryLookupGenerator(CsvIngestionConfiguration csvIngestionConfiguration) {
    if (!csvIngestionConfiguration.isValidationEnabled()) {
      contentProvider.disableValidation();
    }
  }

  /**
   * Generates the lookup cross-reference from the specified source.
   *
   * @param csvFilename the file to process
   * @return the generated lookup
   */
  public NavigableMap<LocalDate, BigDecimal> generate(String csvFilename) {
    final List<IopPaymentRateLte3TableEntry> content = contentProvider.read(csvFilename);
    return LookupGenerator.generateMap(IopPaymentRateLte3TableEntry::getEffectiveDate, IopPaymentRateLte3TableEntry::getRateValue, content, TreeMap::new);
  }
}
